" disble NERDTree plugin
" call janus#disable_plugin('nerdtree')

" remove toolbar in macvim
if has("gui_running")
  set guioptions=-t
endif

" remap leader from '\' to ','
let mapleader = ","

" ack
nnoremap <leader>a :Ack<space>


" fugitive: sexy git wrapper
nnoremap <leader>gb :Gblame<CR>
nnoremap <leader>gg :Ggrep
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gm :Gmove

" Fuzzyfinder
let g:fuf_modesDisable = []
let g:fuf_mrufile_maxItem = 1000
let g:fuf_mrucmd_maxItem = 400
let g:fuf_mrufile_exclude = '\v\~$|\.(bak|sw[po])$|^(\/\/|\\\\|\/mnt\/)'
nnoremap <silent> <C-n>      :FufBuffer<CR>
nnoremap <silent> <C-p>      :FufFileWithCurrentBufferDir<CR>
nnoremap <silent> <C-f><C-p> :FufFileWithFullCwd<CR>
nnoremap <silent> <C-f>p     :FufFile<CR>
nnoremap <silent> <C-f><C-d> :FufDirWithCurrentBufferDir<CR>
nnoremap <silent> <C-f>d     :FufDirWithFullCwd<CR>
nnoremap <silent> <C-f>D     :FufDir<CR>
nnoremap <silent> <C-j>      :FufMruFile<CR>
nnoremap <silent> <C-k>      :FufMruCmd<CR>
nnoremap <silent> <C-b>      :FufBookmarkDir<CR>
nnoremap <silent> <C-f><C-t> :FufTag<CR>
nnoremap <silent> <C-f>t     :FufTag!<CR>
noremap  <silent> g]         :FufTagWithCursorWord!<CR>
nnoremap <silent> <C-f><C-f> :FufTaggedFile<CR>
nnoremap <silent> <C-f><C-j> :FufJumpList<CR>
nnoremap <silent> <C-f><C-g> :FufChangeList<CR>
nnoremap <silent> <C-f><C-q> :FufQuickfix<CR>
nnoremap <silent> <C-f><C-l> :FufLine<CR>
nnoremap <silent> <C-f><C-h> :FufHelp<CR>
nnoremap <silent> <C-f><C-b> :FufAddBookmark<CR>
vnoremap <silent> <C-f><C-b> :FufAddBookmarkAsSelectedText<CR>
nnoremap <silent> <C-f><C-e> :FufEditInfo<CR>
nnoremap <silent> <C-f><C-r> :FufRenewCache<CR>
nnoremap <leader>t :FufFile **/<CR>
nnoremap <leader>T :FufRenewCache<CR>

" clear current search
nnoremap <leader><space> :noh<cr>

" Hitting '#' in visual mode does a search on the current selection. Will not
" work with multi-line selection.
vnoremap # <esc>:let save_reg=@"<cr>gvy:let @/=@"<cr>:let @"=save_reg<cr>?<cr>

" Cycle through the buffers
map  <F7>  :bp<CR>
map  <F8>  :bn<CR>

" Open/close Tagbar
nnoremap <silent> <F9> :TagbarToggle<CR>

" Buffer resizing mappings (shift + arrow key)
nnoremap <S-Up> <c-w>+
nnoremap <S-Down> <c-w>-
nnoremap <S-Left> <c-w><
nnoremap <S-Right> <c-w>>

" indent-guides
" Bundle 'nathanaelkane/vim-indent-guides'
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size  = 1
nnoremap <leader>ig :IndentGuidesToggle<CR>

" Rubytest.vim from chuckg
nmap <leader>ra <Plug>RubyFileRun         " Run all tests for the current file.
nmap <leader>rf <Plug>RubyTestRun         " Run focused test from cursor.
nmap <leader>rl <Plug>RubyTestRunLast     " Run the last test from any buffer.

" chuckg rails
" Bundle 'tpope/vim-rails'
let g:rails_ctags_arguments = "--languages=-javascript"
let g:rails_ctags_arguments .= " --extra=+f"
let g:rails_ctags_arguments .= " --exclude=.git --exclude=log"
"let g:rails_ctags_arguments .= " `bundle show rails`/../*"
let g:rails_ctags_arguments .= " `ruby -rrubygems -e 'p Gem.path.collect {|p| [\"gems\", File.join(\"bundler\", \"gems\")].collect {|d| File.join(p, d)} }.join(\" \")' | sed 's/\"//g'`"

" -----------------------------------------------------------------------------
" tags
" -----------------------------------------------------------------------------

" vim-rails creates tags in `tmp/tags` when you generate using :Rtags
set tags=./tags,tags,tmp/tags

